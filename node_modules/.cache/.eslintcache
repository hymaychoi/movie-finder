[{"C:\\Users\\hymay\\OneDrive\\Desktop\\react-project\\movie_finder\\src\\index.js":"1","C:\\Users\\hymay\\OneDrive\\Desktop\\react-project\\movie_finder\\src\\App.js":"2","C:\\Users\\hymay\\OneDrive\\Desktop\\react-project\\movie_finder\\src\\routes\\Home.js":"3","C:\\Users\\hymay\\OneDrive\\Desktop\\react-project\\movie_finder\\src\\components\\Movie.js":"4","C:\\Users\\hymay\\OneDrive\\Desktop\\react-project\\movie_finder\\src\\routes\\Detail.js":"5"},{"size":269,"mtime":1658037967957,"results":"6","hashOfConfig":"7"},{"size":488,"mtime":1658037967951,"results":"8","hashOfConfig":"7"},{"size":2185,"mtime":1658037967959,"results":"9","hashOfConfig":"7"},{"size":892,"mtime":1658037967951,"results":"10","hashOfConfig":"7"},{"size":2166,"mtime":1658037967958,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q6pmwp",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\hymay\\OneDrive\\Desktop\\react-project\\movie_finder\\src\\index.js",[],[],"C:\\Users\\hymay\\OneDrive\\Desktop\\react-project\\movie_finder\\src\\App.js",[],[],"C:\\Users\\hymay\\OneDrive\\Desktop\\react-project\\movie_finder\\src\\routes\\Home.js",["29"],[],"import { useState, useEffect } from 'react';\r\nimport '../css/home.css';\r\nimport Movie from '../components/Movie'\r\n\r\nfunction Home(){\r\n  const slider = document.getElementById('slider')\r\n  const [startX, setStartX] = useState(0)\r\n  const [scrollLeft, setScrollLeft] = useState(0)\r\n  const [mouseDown, setMouseDown] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const [movies, setMovies] = useState([])\r\n  \r\n  const getMovies = async()=>{\r\n    const data = await (await fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=9.8`)).json()\r\n    console.log(data)\r\n    setMovies(data.data.movies)\r\n    setLoading(false)\r\n  }\r\n\r\n  const onMouseDown = (e)=>{\r\n    setMouseDown(true)\r\n    slider.classList.add(\"active\")\r\n    setStartX(e.pageX - slider.offsetLeft) \r\n    setScrollLeft(slider.scrollLeft)\r\n  }\r\n  \r\n  const onMouseUp = (e)=>{\r\n    setMouseDown(false)\r\n    slider.classList.remove(\"active\")\r\n  }\r\n  \r\n  const onMouseLeave = (e)=>{\r\n    setMouseDown(false)\r\n    slider.classList.remove(\"active\")\r\n  }\r\n\r\n  const onMouseMove = (e)=>{\r\n    if(!mouseDown) return\r\n    e.preventDefault()\r\n    const x = e.pageX - slider.offsetLeft\r\n    const walk = (x-startX) * 4\r\n    slider.scrollLeft = scrollLeft - walk;\r\n  }\r\n  useEffect(()=>{\r\n    getMovies()\r\n  }, [])\r\n  \r\n  return (\r\n    <div className=\"Home\">\r\n      <div className='header'>\r\n        <h1 className='title'>Top Rated<span>Movies</span></h1>\r\n      </div>\r\n      <div className='main'>\r\n        {loading ? <iframe src=\"https://giphy.com/embed/3o7bu3XilJ5BOiSGic\" frameBorder=\"0\" className='loading_icon' allowFullScreen></iframe>: \r\n          <div id='slider'\r\n               className='items' \r\n               onMouseDown={onMouseDown}\r\n               onMouseUp={onMouseUp}\r\n               onMouseLeave={onMouseLeave} \r\n               onMouseMove={onMouseMove}>\r\n            {movies.map(movie=> \r\n              <Movie key={movie.id}\r\n                     id={movie.id}\r\n                     coverImg={movie.medium_cover_image} \r\n                     title={movie.title} \r\n                     genres={movie.genres} />)}\r\n          </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home","C:\\Users\\hymay\\OneDrive\\Desktop\\react-project\\movie_finder\\src\\components\\Movie.js",[],[],"C:\\Users\\hymay\\OneDrive\\Desktop\\react-project\\movie_finder\\src\\routes\\Detail.js",["30","31","32","33"],[],"import { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport '../css/detail.css';\r\n\r\nfunction Detail() {\r\n    const {id} = useParams()\r\n    const [loading, setLoading] = useState(true)\r\n    const [movie, setMovie] = useState({})\r\n    console.log(movie)\r\n\r\n    const getMovie= async()=>{\r\n        const data = await (await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)).json()\r\n        setMovie(data.data.movie)\r\n        setLoading(false)\r\n    }\r\n    const onClick =()=>{\r\n        console.log(\"clicked!\")\r\n    }\r\n    useEffect(() => {\r\n        getMovie()\r\n    }, [])\r\n    \r\n    return  <>\r\n                {loading ? <div className='loading'><iframe src=\"https://giphy.com/embed/3o7bu3XilJ5BOiSGic\" frameBorder=\"0\" className='loading_icon' allowFullScreen></iframe></div>: \r\n                <div className='detail'>\r\n                    <a className='close-btn' href='/'>&times;</a>\r\n                    <div className='detail-img'>\r\n                        <img src={movie.large_cover_image} />\r\n                    </div>\r\n                     <div className='detail-info'>\r\n                        <div className='detail-info-title-and-rating'>\r\n                            <h2 className='movie-title'>{movie.title}</h2>\r\n                            <span className='movie-rating'>\r\n                                <div class=\"stars-outer\">\r\n                                    <div class=\"stars-inner\" style={{width: (movie.rating*10)+\"%\"}}></div>\r\n                                </div>\r\n                            </span>  \r\n                        </div>\r\n                        <div className='detail-info-genre-and-runtime'>\r\n                            <ul className='movie-genres'>{movie.genres.map(genre=><li>{genre}</li>)}</ul>\r\n                            <h5 className='movie-runtime'>{movie.runtime} mins</h5>  \r\n                        </div>\r\n                        <div className='detail-info-summary'>\r\n                            {movie.description_full}\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            </> \r\n}\r\n\r\nexport default Detail\r\n",{"ruleId":"34","severity":1,"message":"35","line":54,"column":20,"nodeType":"36","endLine":54,"endColumn":134},{"ruleId":"37","severity":1,"message":"38","line":16,"column":11,"nodeType":"39","messageId":"40","endLine":16,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":21,"column":8,"nodeType":"43","endLine":21,"endColumn":10,"suggestions":"44"},{"ruleId":"34","severity":1,"message":"35","line":24,"column":53,"nodeType":"36","endLine":24,"endColumn":167},{"ruleId":"45","severity":1,"message":"46","line":28,"column":25,"nodeType":"36","endLine":28,"endColumn":62},"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'onClick' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.","ArrayExpression",["47"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"48","fix":"49"},"Update the dependencies array to be: [getMovie]",{"range":"50","text":"51"},[618,620],"[getMovie]"]